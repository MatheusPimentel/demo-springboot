name: CI/CD Pipeline - Build, Teste e Publicação da Imagem Docker

# 1. GATILHO CORRIGIDO: Agora o pipeline roda em pushes para a main E em PRs para a main.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # JOB 1: CI - Build e Teste (Continua como antes)
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache de dependências do Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build e Teste com Maven
        run: mvn -B clean package

  # JOB 2: CD - Publicação da Imagem Docker (Com a nova condição)
  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest

    # 2. CONDIÇÃO ADICIONADA: Este job inteiro só será executado SE o evento que
    # disparou o pipeline for um 'push' na branch 'main'.
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extrair metadados da imagem Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Construir e publicar imagem Docker
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}